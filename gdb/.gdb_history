target remote 10.0.9.241:2345
b OMSPortfolioManager.cpp:184
c
monitor exit
target remote 10.0.9.241:2345
b OMSPortfolioManager.cpp:184
c
n
display it->second._ticker
n
n
n
n
n
n
n
display it->second._ticker
n
n
n
n
n
n
display forex_instrument
n
n
n
n
n
n
n
n
n
n
n
p forex_instrument
p it->second._ticker
b OMSPortfolioManager.cpp:193
c
s
p direct_exchange_best_px 
p direct_exchange_best_px.first
p direct_exchange_best_px[0]
p direct_exchange_best_px
help
show version
p direct_exchange_best_px
p /r direct_exchange_best_px
p direct_exchange_best_px
p direct_exchange_best_px[]
p direct_exchange_best_px[0]
set print pretty on
set print object on
set print demangle on
p direct_exchange_best_px
tree direct_exchange_best_px direct_exchange_best_px._M_t._M_header->_M_parent
define tree
# $arg0: map
# $arg1: current root node
  if $arg1->_M_left
    tree $arg0 $arg1->_M_left
  end
# The header pointer has the needed type i.e.
# std::_Rb_tree_node<std::pair<T1 const, T2> > *
# whereas the node is of type (std::_Rb_tree_node_base *). So we copy
# the node pointer temporarily to the header pointer to have the
# correct output
  set $header=$arg0._M_t._M_header
  set variable $arg0._M_t._M_header=$arg1
  print $arg0._M_t._M_header._M_value_field
  set variable $arg0._M_t._M_header=$header
  if $arg1->_M_right
    tree $arg0 $arg1->_M_right
  end
end
define stl_map
  whatis $arg0
  tree $arg0 $arg0._M_t._M_header->_M_parent
end
stl_map direct_exchange_best_px 
define stl_map_len
  output $arg0._M_t._M_node_count
  echo \n
end
stl_map_len direct_exchange_best_px 
source .gdbinit
source ~/.gdbinit
source ~/.gdbinit
help set history
help set history save
help set history size
source ~/.gdbinit
source ~/.gdbinit
pmap direct_exchange_best_px 
pmap direct_exchange_best_px currency_pair vtstore::decimal
kill
quit
i b
c
c
c
target remote 10.0.9.241:2344
target remote 10.0.9.241:2345
list
c
quit
target remote 10.0.9.241:2345
help
b OMSPortfolioManager.cpp:184
c
list
n
n
n
n
n
n
n
n
pmap direct_exchange_best_px 
pmap direct_exchange_best_px currency_pair vtstore::decimal
p it->second._ticker.size()
p OMSDomain::_market_info.GetExchangeType(it->second._exchange)
p _market_data_map
p _market_data_map
quit
show
