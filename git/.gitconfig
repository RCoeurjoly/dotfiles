[alias]
  aa = add --all
  amend = commit --amend
  br = branch
	checkout = checkout
  checkout-pr = "!f() { git fetch origin pull/$1/head:pr-$1 && git checkout pr-$1; }; f"
  cm = commit -m
  co = checkout
  dc = diff --cached
	diffcommit = "!f() { git diff $1~ $1; }; f"
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	isRebaseInProcess = "!f() { test -d \"$(git rev-parse --git-path rebase-merge)\" || test -d \"$(git rev-parse --git-path rebase-apply) 2>/dev/null\"; }; f"
	isWorkDirClean = "!f() { if [ -z \"$(git status --porcelain)\" ]; then return 0; fi; return 1; }; f"
	lasttag = describe --tags
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  loc = !git diff --stat `git hash-object -t tree /dev/null` | tail -1 | cut -d' ' -f5
  pr = pull-request
	pull = pull
	push = push
  st = status -sb
	status = status
  sum = log --oneline --no-merges
	unstage = reset HEAD
	wip = "!f() { git aa; git cm 'WIP'; }; f"
[branch]
  autosetuprebase = always
[color]
  ui = true
[color "diff"]
  meta = bold cyan
[color "grep"]
  filename = magenta
  match = bold red
  linenumber = bold blue
[commit]
	# gpgsign = true
  template = ~/.gitmessage
[core]
  excludesfile = ~/.gitignore
	pager = diff-so-fancy | less --tabs=4 -RFX
	editor = emacs
	hookspath = ~/dotfiles/scripts/git-hooks
[fetch]
  prune = true
[grep]
  linenumber = true
[merge]
  ff = only
[push]
  default = current
[rebase]
  autosquash = true
[user]
  name = Roland Coeurjoly
  email = rolandcoeurjoly@gmail.com
	# signingkey = 0499AF06
[github]
	user = RCoeurjoly
[magithub]
	online = false
[magithub "status"]
	includeStatusHeader = false
	includePullRequestsSection = false
	includeIssuesSection = false
[http]
[http]
	sslVerify = false
[submodule]
  recurse = true
